name: Convert GIF To MP4

on:
  push:
    branches:
      - master
jobs:
  build:
    name: Convert GIF
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v1-beta
        id: setup-ffmpeg

      - name: Convert
        run: |
          git show --pretty="format:" --name-status HEAD | grep '.gif$' | while read target; do
            read status gif <<< "$(echo $target | awk '{print $1,$NF}')"
            printf "\e[31m===========${gif}============\e[m\n"
            filename=$(basename $gif | sed 's/\.[^\.]*$//')
            dir=$(dirname $gif)
            mp4=${dir}/${filename}.mp4
            case "$status" in
              'A') # add
                echo 'add'
                [ ! -e $mp4 ]; && ffmpeg -i $gif -movflags faststart -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" $mp4 </dev/null
                ;;
              [R]*) # rename
                echo 'rename'
                read pre_mp4 <<< "$(echo $target | awk '{print $2}' | sed 's/\.[^\.]*$/.mp4/' )"
                [ -e $pre_mp4 ] && git rm $pre_mp4
                [ ! -e $mp4 ]; && ffmpeg -i $gif -movflags faststart -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" $mp4 </dev/null
                ;;
              'D') # delete
                echo 'delete'
                [ -e $mp4 ] && git rm $mp4
                ;;
            esac
          done

      - name: Commit and push
        run: |
          git status
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "convert gif to mp4"
          git push origin master
